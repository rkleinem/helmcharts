# Default values for auditor-prometheus.

# nameOverride overrides the name of the chart
nameOverride: ""
# fullnameOverride overrides the fully qualified name of the chart
fullnameOverride: ""

commonAnnotations: {}

# fullSetup specifies whether to run Prometheus on Kubernetes.
# If set to false only a ServiceAccount will be created to
# provide a token for accessing the Kubelets.
fullSetup: true

deployment:
  annotations: {}
  podAnnotations: {}
  uid: 65534
  gid: 65534
  ## Prometheus image to use
  registry: prom
  repository: prometheus
  # Overrides the image tag whose default is the chart appVersion.
  tag: null
  pullPolicy: IfNotPresent

config:
  annotations: {}
  # How often Prometheus will scrape each Kubelet
  scrapeInterval: 1m
  scrapeTimeout: 15s
  # Which metrics will be saved
  # No filter will be applied if empty
  series:
    - pod_cpu_usage_seconds_total
    - pod_memory_working_set_bytes
  # For which namespaces data will be collected
  # No filter will be applied if empty
  # Is set by parent chart. Use if you want to run this chart
  # as stand-alone.
  namespaces: []
  # Whether to include the namespace of this chart
  includeOwnNamespace: true
  scrape_cadvisor: false
  scrape_probes: false

service:
  annotations: {}
  # Change if you want to run the collector outside of Kubernetes
  type: ClusterIP
  # Used to override the default
  name: svc-prometheus
  port: 9090
  nodePort: 31000

persistentVolume:
  use: false
  annotations:
  #  pv.beta.kubernetes.io/gid: "210"
  size: "3Gi"
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values: [""] # Hostname
  type:
    local:
      path: /srv/auditor/prometheus

serviceAccount:
  annotations: {}
  nameOverride:

clusterRole:
  annotations: {}
  nameOverride:

secret:
  annotations: {}
